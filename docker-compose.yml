version: '3.8'
services:
  mysql-8:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      TZ: 'Asia/Dhaka'
    env_file:
      - ./.env
    ports:
      - ${MYSQL_PORT:-3306}:3306
    command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci','--default-time-zone=+06:00']
    volumes:
      - ./data/mysql-8:/var/lib/mysql
      - ./config/mysql-8:/docker-entrypoint-initdb.d
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1GB
        reservations:
          cpus: '0.25'
          memory: 200M

  percona-8:
    image: amd64/percona:8.0
    platform: linux/amd64
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      TZ: 'Asia/Dhaka'
    env_file:
      - ./.env
    ports:
      - ${PERCONA_PORT:-3307}:3306
    volumes:
      - ./data/percona-8:/var/lib/mysql
      - ./config/percona-8:/docker-entrypoint-initdb.d
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1GB
        reservations:
          cpus: '0.25'
          memory: 200M
      
  postgres-15:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
      TZ: 'Asia/Dhaka'
      PGTZ: 'GMT+6'
    env_file:
      - ./.env
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    volumes:
      - ./data/postgres-15:/var/lib/postgresql/data
      - ./config/postgres-15:/docker-entrypoint-initdb.d
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1GB
        reservations:
          cpus: '0.25'
          memory: 200M

  mssql-2022:
    image: mcr.microsoft.com/azure-sql-edge
    command: /opt/mssql/bin/sqlservr
    cap_add:
      - SYS_PTRACE
    restart: unless-stopped
    environment:
      ACCEPT_EULA: 1
      MSSQL_SA_PASSWORD: ${DB_ROOT_PASSWORD}
      MSSQL_SLEEP: 7
      TZ: 'Asia/Dhaka'
    env_file:
      - ./.env
    ports:
      - ${MSSQL_PORT:-1433}:1433
    stdin_open: true
    volumes:
      - ./data/mssql-2022:/var/opt/mssql
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1GB
        reservations:
          cpus: '0.25'
          memory: 200M
  sqlcmd:
    image: mcr.microsoft.com/mssql-tools:latest
    platform: linux/amd64
    stdin_open: true
    tty: true
    environment:
        MSSQL_SA_PASSWORD: ${DB_ROOT_PASSWORD}
        MSSQL_USER: ${DB_USER}
        MSSQL_PASSWORD: ${DB_PASSWORD}
        MSSQL_DATABASE: ${DB_NAME}
    env_file:
      - ./.env
    command: /bin/bash -c 'chmod +x /entrypoint.sh && /entrypoint.sh && tail -f /dev/null'
    depends_on:
      - mssql-2022
    volumes:
      - ./config/mssql-2022/entrypoint.sh:/entrypoint.sh
      - ./config/mssql-2022/init.sql:/init.sql
    healthcheck:
      test: "/opt/mssql-tools/bin/sqlcmd -U sa -P $${DB_ROOT_PASSWORD} -Q \"select 1\" && grep -q \"MSSQL CONFIG COMPLETE\" ./config.log"
      interval: 15s
      retries: 20